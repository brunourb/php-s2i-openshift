# Estágio de build
FROM alpine:3.17 AS build

ENV PHP_VERSION=php81 \
    LANG=es_ES.UTF-8 \
    COMPOSER_VERSION=2.6.3 \
    LANGUAGE=es_ES.UTF-8 \
    LC_ALL=es_ES.UTF-8

LABEL autor="Martin Vilche <mfvilche@gmail.com>" \
      io.k8s.description="php s2i images" \
      io.k8s.display-name="php Applications" \
      io.openshift.tags="builder,php,composer,alpine" \
      io.openshift.expose-services="8080" \
      io.openshift.s2i.scripts-url="image:///usr/libexec/s2i"

RUN apk --no-cache upgrade --available && apk add --update --no-cache \
    git \
    tidyhtml \
    shadow \
    busybox-suid \
    findutils \
    tzdata \
    shadow \
    nginx \
    bash \
    curl \
    linux-headers \
   libintl \
    enchant2 \
    gmp \
    libgmpxx \
    lmdb \
    libzip \
    gettext \
    gdbm \
    imap-dev \
    openldap-dev \
    unixodbc \
    postgresql-libs \
    net-snmp \
    libsodium \
    sqlite-libs \
    tidyhtml \
    freetds \
    libxslt \
    libmemcached \
    lz4-libs \
    yaml \
    libevent \
    imagemagick \
    vips \
    $PHP_VERSION \
    $PHP_VERSION-fpm \
    $PHP_VERSION-intl \
    $PHP_VERSION-openssl \
    $PHP_VERSION-dba \
    $PHP_VERSION-sqlite3 \
    $PHP_VERSION-pear \
    $PHP_VERSION-tokenizer \
    $PHP_VERSION-litespeed \
    $PHP_VERSION-gmp \
    $PHP_VERSION-pdo_mysql \
    $PHP_VERSION-sodium \
    $PHP_VERSION-pcntl \
    $PHP_VERSION-common \
    $PHP_VERSION-xsl \
    $PHP_VERSION-pecl-mailparse \
    $PHP_VERSION-pecl-imagick \
    $PHP_VERSION-mysqlnd \
    $PHP_VERSION-enchant \
    $PHP_VERSION-pspell \
    $PHP_VERSION-pecl-redis \
    $PHP_VERSION-snmp \
    $PHP_VERSION-doc \
    $PHP_VERSION-fileinfo \
    $PHP_VERSION-mbstring \
    $PHP_VERSION-pecl-yaml \
    $PHP_VERSION-dev \
    $PHP_VERSION-embed \
    $PHP_VERSION-xmlreader \
    $PHP_VERSION-pdo_sqlite \
    $PHP_VERSION-exif \
    $PHP_VERSION-opcache \
    $PHP_VERSION-ldap \
    $PHP_VERSION-posix \
    $PHP_VERSION-session \
    $PHP_VERSION-gd \
    $PHP_VERSION-gettext \
    $PHP_VERSION-json \
    $PHP_VERSION-xml \
    $PHP_VERSION-iconv \
    $PHP_VERSION-sysvshm \
    $PHP_VERSION-curl \
    $PHP_VERSION-shmop \
    $PHP_VERSION-odbc \
    $PHP_VERSION-phar \
    $PHP_VERSION-pdo_pgsql \
    $PHP_VERSION-imap \
    $PHP_VERSION-pecl-apcu \
    $PHP_VERSION-pdo_dblib \
    $PHP_VERSION-pgsql \
    $PHP_VERSION-pdo_odbc \
    $PHP_VERSION-zip \
    $PHP_VERSION-cgi \
    $PHP_VERSION-ctype \
    $PHP_VERSION-bcmath \
    $PHP_VERSION-calendar \
    $PHP_VERSION-tidy \
    $PHP_VERSION-dom \
    $PHP_VERSION-sockets \
    $PHP_VERSION-pecl-event \
    $PHP_VERSION-pecl-vips \
    $PHP_VERSION-pecl-memcached \
    $PHP_VERSION-brotli \
    $PHP_VERSION-soap \
    $PHP_VERSION-sysvmsg \
    $PHP_VERSION-ftp \
    $PHP_VERSION-sysvsem \
    $PHP_VERSION-pdo \
    $PHP_VERSION-bz2 \
    $PHP_VERSION-mysqli \
    $PHP_VERSION-simplexml \
    $PHP_VERSION-xmlwriter \
    $PHP_VERSION-pecl-redis \
    $PHP_VERSION-pecl-xdebug


RUN sed -i -e "s/error_log.*/error_log \/proc\/self\/fd\/2 info;/g" /etc/nginx/nginx.conf && \
    sed -i -e "s/user nginx;//g" /etc/nginx/nginx.conf && \
    sed -i -e "s/^;curl.cainfo =/curl.cainfo='\/etc\/nginx\/ca\/cacert.pem'/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^;openssl.cafile=/openssl.cafile='\/etc\/nginx\/ca\/cacert.pem'/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/memory_limit.*/memory_limit = -1/g" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^short_open_tag = Off/short_open_tag = On/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^post_max_size = 8M/post_max_size = 80M/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^upload_max_filesize = 2M/upload_max_filesize = 40M/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^LogLevel warn/LogLevel Error/" /etc/$PHP_VERSION/php.ini && \
    mkdir -p /etc/nginx/ca && curl -o /etc/nginx/ca/cacert.pem https://curl.se/ca/cacert.pem

RUN mkdir -p /php-fpm && \
    echo "VERSION PHP INSTALLED: " && php -version && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer --version=$COMPOSER_VERSION && rm composer-setup.php && \
    rm -rf /var/cache/apk/* /etc/localtime

COPY contrib/s2i/bin/ /usr/libexec/s2i
COPY contrib/info.php /var/www/html/index.php
COPY contrib/nginx-http.conf /etc/nginx/http.d/default.conf
COPY contrib/www.conf /php-fpm/www.conf
COPY contrib/prometheus/phpfpm_exporter /php-fpm/phpfpm_exporter
COPY contrib/prometheus/nginx-prometheus-exporter /etc/nginx/nginx-prometheus-exporter

RUN mkdir -p /opt/composer_env /usr/share/nginx /var/www/html /run/nginx /var/lib/nginx/logs /var/log/nginx /usr/share/composer_install /var/log/$PHP_VERSION && \
    usermod -u 2190 nginx && usermod -aG 0 nginx && touch /etc/localtime /etc/timezone && \
    chown -R 2190 /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
    chgrp -R 0 /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
    chmod -R g=u /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
    chmod +x /usr/libexec/s2i/* /php-fpm/phpfpm_exporter /etc/nginx/nginx-prometheus-exporter /usr/local/bin/composer && \
    chmod g=u -R /usr/local

# Adicionar o usuário 2190 ao sudoers com permissão sem senha para os comandos necessários
RUN echo "2190 ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Estágio de runtime
FROM alpine:3.17 AS runtime

ENV PHP_VERSION=php81 \
    LANG=es_ES.UTF-8 \
    COMPOSER_VERSION=2.6.3 \
    LANGUAGE=es_ES.UTF-8 \
    LC_ALL=es_ES.UTF-8

LABEL autor="Martin Vilche <mfvilche@gmail.com>" \
      io.k8s.description="php s2i images" \
      io.k8s.display-name="php Applications" \
      io.openshift.tags="builder,php,composer,alpine" \
      io.openshift.expose-services="8080" \
      io.openshift.s2i.scripts-url="image:///usr/libexec/s2i"

# Criação do usuário 2190 no estágio de runtime
RUN adduser -D -u 2190 -g '' nginx

RUN apk --no-cache upgrade --available && apk add --update --no-cache \
    sudo \
    nginx \
    bash \
    shadow \
    curl \
    libintl \
    enchant2 \
    gmp \
    libgmpxx \
    lmdb \
    libzip \
    php-common \
    gettext \
    $PHP_VERSION \
    $PHP_VERSION-fpm \
    $PHP_VERSION-pdo_mysql \
    $PHP_VERSION-opcache \
    $PHP_VERSION-mbstring \
    $PHP_VERSION-xml \
    $PHP_VERSION-gd \
    $PHP_VERSION-curl \
    $PHP_VERSION-zip \
    $PHP_VERSION-ctype \
    $PHP_VERSION-bcmath \
    $PHP_VERSION-calendar \
    $PHP_VERSION-dom \
    $PHP_VERSION-sockets \
    $PHP_VERSION-soap \
    $PHP_VERSION-sysvmsg \
    $PHP_VERSION-ftp \
    $PHP_VERSION-sysvsem \
    $PHP_VERSION-pdo \
    $PHP_VERSION-mysqli \
    $PHP_VERSION-simplexml \
    $PHP_VERSION-xmlwriter

# Copiar arquivos necessários do estágio de build
COPY --from=build /var/www/html /var/www/html
COPY --from=build /php-fpm /php-fpm
COPY --from=build /usr/local/bin/composer /usr/local/bin/composer
COPY --from=build /usr/libexec/s2i /usr/libexec/s2i
COPY --from=build /etc/nginx /etc/nginx
COPY --from=build /etc/$PHP_VERSION /etc/$PHP_VERSION
COPY --from=build /usr/include/$PHP_VERSION /usr/include/$PHP_VERSION
COPY --from=build /usr/lib/$PHP_VERSION /usr/lib/$PHP_VERSION
COPY --from=build /usr/share/$PHP_VERSION /usr/share/$PHP_VERSION
COPY --from=build /opt/composer_env /opt/composer_env

WORKDIR /var/www/html

ENV HOME=/usr/share/nginx \
    NGINX_CONFIGDIR=/etc/nginx \
    FPM_MAX_CHILDREN=5 \
    NGINX_WORKER_PROCESSES=1 \
    NGINX_WORKER_CONNECTION=1024 \
    NGINX_CLIENT_MAX_BODY_SIZE=0 \
    FPM_GROUP=nginx \
    FPM_USER=nginx \
    TIMEZONE=America/Sao_Paulo

USER 2190

EXPOSE 8080 9253 9113

CMD ["/usr/libexec/s2i/run"]
