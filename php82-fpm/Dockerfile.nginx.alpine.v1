# Estágio de build
FROM php:8.2-cli AS build

ENV PHP_VERSION=php \
LANG=es_ES.UTF-8 \
COMPOSER_VERSION=2.6.3 \
LANGUAGE=es_ES.UTF-8 \
LC_ALL=es_ES.UTF-8

LABEL autor="Martin Vilche <mfvilche@gmail.com>" \
      io.k8s.description="php s2i images" \
      io.k8s.display-name="php Applications" \
      io.openshift.tags="builder,php,composer,alpine" \
      io.openshift.expose-services="8080" \
      io.openshift.s2i.scripts-url="image:///usr/libexec/s2i"

# Instalar dependências necessárias
RUN apt-get update && \
    apt-get install -y \
    libzip-dev \
    libxml2-dev \
    libcurl4-openssl-dev \
    nginx && \
    php

# Configurar PHP e Nginx
RUN sed -i -e "s/error_log.*/error_log \/proc\/self\/fd\/2 info;/g" /etc/nginx/nginx.conf && \
    sed -i -e "s/user nginx;//g" /etc/nginx/nginx.conf && \
    sed -i -e "s/^;curl.cainfo =/curl.cainfo='\/etc\/nginx\/ca\/cacert.pem'/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^;openssl.cafile=/openssl.cafile='\/etc\/nginx\/ca\/cacert.pem'/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/memory_limit.*/memory_limit = -1/g" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^short_open_tag = Off/short_open_tag = On/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^post_max_size = 8M/post_max_size = 80M/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^upload_max_filesize = 2M/upload_max_filesize = 40M/" /etc/$PHP_VERSION/php.ini && \
    sed -i -e "s/^LogLevel warn/LogLevel Error/" /etc/$PHP_VERSION/php.ini && \
    mkdir -p /etc/nginx/ca && curl -o /etc/nginx/ca/cacert.pem https://curl.se/ca/cacert.pem

RUN mkdir -p /php-fpm && ln -sf /usr/bin/$PHP_VERSION /usr/bin/php && \
    echo "VERSION PHP INSTALLED: " && php -version && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php composer-setup.php --install-dir=/usr/local/bin --filename=composer --version=$COMPOSER_VERSION && rm composer-setup.php && \
    rm -rf /var/cache/apk/* /etc/localtime

# Copiar scripts e arquivos de configuração
COPY contrib/s2i/bin/ /usr/libexec/s2i
COPY contrib/info.php /var/www/html/index.php
COPY contrib/nginx-http.conf /etc/nginx/http.d/default.conf
COPY contrib/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY contrib/prometheus/phpfpm_exporter /usr/local/sbin/phpfpm_exporter
COPY contrib/prometheus/nginx-prometheus-exporter /etc/nginx/nginx-prometheus-exporter

# Configurações adicionais
#RUN mkdir -p /opt/composer_env /usr/share/nginx /var/www/html /run/nginx /var/lib/nginx/logs /var/log/nginx /usr/share/composer_install /var/log/$PHP_VERSION && usermod -u 2190 nginx && usermod -aG 0 nginx && touch /etc/localtime /etc/timezone && \
#    chown -R 2190 /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
#    chgrp -R 0 /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
#    chmod -R g=u /usr/local/bin/composer /php-fpm /var/log/$PHP_VERSION /run/nginx /etc/nginx /usr/share/nginx /var/lib/nginx /var/log/nginx /etc/$PHP_VERSION /opt/composer_env /var/www/html /etc/timezone /etc/localtime /usr/libexec/s2i && \
#    chmod +x /usr/libexec/s2i/* /php-fpm/phpfpm_exporter /etc/nginx/nginx-prometheus-exporter /usr/local/bin/composer && \
#    chmod g=u -R /usr/local

# Estágio de runtime
FROM php:8.1-fpm-alpine3.20 AS runtime

# Instalar dependências necessárias no Alpine
RUN apk update && \
    apk add --no-cache \
    curl \
    libzip-dev \
    libxml2-dev \
    curl-dev \
    oniguruma-dev \
    nginx && \
    docker-php-ext-install curl iconv mysqli opcache pdo_mysql soap zip

# Install xdebug
RUN pecl install redis && pecl install xdebug \
    && docker-php-ext-enable redis xdebug

WORKDIR /var/www/html

ENV HOME=/usr/share/nginx \
NGINX_CONFIGDIR=/etc/nginx \
FPM_MAX_CHILDREN=5 \
NGINX_WORKER_PROCESSES=1 \
NGINX_WORKER_CONNECTION=1024 \
NGINX_CLIENT_MAX_BODY_SIZE=0 \
FPM_GROUP=nginx \
FPM_USER=nginx

# Copiar arquivos necessários do estágio de build
COPY --from=build /var/www/html /var/www/html
#COPY --from=build /php-fpm /usr/local/sbin/
COPY --from=build /usr/local/bin/composer /usr/local/bin/composer
COPY --from=build /usr/libexec/s2i /usr/libexec/s2i
COPY --from=build /etc/nginx /etc/nginx
#COPY --from=build /etc/$PHP_VERSION /etc/$PHP_VERSION
COPY --from=build /opt/composer_env /opt/composer_env

USER 2190:0

EXPOSE 8080 9253 9113

CMD ["/usr/libexec/s2i/run"]